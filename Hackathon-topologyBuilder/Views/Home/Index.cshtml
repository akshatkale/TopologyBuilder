<style>
     #contents {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
    }

    #canvas {
        width: 1400px;
        height: 650px;
        padding: 5px;
        border: 2px inset #aaaaaa;
    }

    #stage {
        width: 750px;
        height: 100px;
        padding: 5px;
        border: 0px solid #aaaaaa;
    }

    #StageTable {
        border: 1px solid #aaaaaa;
    }

    #inputform {
        padding-left: 10%;
    }


</style>

<script src="https://cdn.jsdelivr.net/npm/leader-line@1.0.5/leader-line.min.js"></script>

<div id="start">start</div>
<div id="end">end</div>



<script>
    function inputResourceName(data) {
        let resourceName = prompt("Please enter Resource Name:");
        if (resourceName != null) {
            ResourceNameMap.set(document.getElementById(data).id, resourceName);
        }
    }

    /* Modal Content/Box */
    .modal-content {
        background-color: #fefefe;
        margin: 15% auto; /* 15% from the top and centered */
        padding: 20px;
        border: 1px solid #888;
        width: 80%; /* Could be more or less, depending on screen size */
    }

    function drag(ev) {
        ev.dataTransfer.setData("text", ev.target.id);
    }

    function drop(event) {
        event.preventDefault();
        var data = event.dataTransfer.getData("text");
        if (event.target.nodeName !== "IMG")
        {
            event.srcElement.appendChild(document.getElementById(data));
            event.target.appendChild(document.getElementById(data));
            document.getElementById("wanholder").innerHTML = '<img id="wan1" src="./assets/wan.png" draggable="true" ondragstart="drag(event)" width="50" height="50">';
            document.getElementById("demo").innerHTML = document.getElementById(data).id + " was added to the topology.";

            /*
            var line = new LeaderLine(
                document.getElementById('wan'),
                document.getElementById(data));
                */
        }
    }

    function remove(event)
    {
        event.preventDefault();
        var data = event.dataTransfer.getData("text");
        if (event.target.nodeName !== "IMG")
        {
            event.target.appendChild(document.getElementById(data));

            document.getElementById("demo").innerHTML = document.getElementById(data).id + " was removed from the topology.";

            line.remove();
        }
    }
</script>

<p>vWan Resources into the rectangle to generate topology:</p>

<div id="contents">
    <div>
        <div id="stage" ondrop="remove(event)" ondragover="allowDrop(event)">
            <br>
            <table id="StageTable">
                <tr>
                    <td>Virtual WAN</td>
                    <td>Virtual Hub</td>
                    <td>VNG</td>
                    <td>Connection</td>
                    <td>Site</td>
                </tr>
                <tr>
                    <td>
                        <div id="wanholder">
                            <img id="wan" src="./assets/wan.png" draggable="true" ondragstart="drag(event)" width="50" height="50">
                        </div>
                    </td>
                    <td>
                        <img id="hub" src="./assets/hub.png" draggable="true" ondragstart="drag(event)" width="50" height="50">
                    </td>
                    <td>
                        <img id="vng" src="./assets/vng.png" draggable="true" ondragstart="drag(event)" width="50" height="50">
                    </td>
                    <td>
                        <img id="conn" src="./assets/conn.png" draggable="true" ondragstart="drag(event)" width="50" height="50">
                    </td>
                    <td>
                        <img id="site" src="./assets/site.png" draggable="true" ondragstart="drag(event)" width="50" height="50">
                    </td>
                </tr>
            </table>
            <!--
            <img id="wan" src="./assets/wan.png" draggable="true" ondragstart="drag(event)" width="50" height="50">
            <img id="hub" src="./assets/hub.png" draggable="true" ondragstart="drag(event)" width="50" height="50">
            <img id="vng" src="./assets/vng.png" draggable="true" ondragstart="drag(event)" width="50" height="50">
            <img id="conn" src="./assets/conn.png" draggable="true" ondragstart="drag(event)" width="50" height="50">
            <img id="site" src="./assets/site.png" draggable="true" ondragstart="drag(event)" width="50" height="50">
                -->
        </div>
        <br>
        <br>
        <div id="canvas" ondrop="drop(event)" ondragover="allowDrop(event)"></div>

    function dragElement(elmnt) {
        var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;
        if (document.getElementById(elmnt.id + "header")) {
            /* if present, the header is where you move the DIV from:*/
            document.getElementById(elmnt.id + "header").onmousedown = dragMouseDown;
        } else {
            /* otherwise, move the DIV from anywhere inside the DIV:*/
            elmnt.onmousedown = dragMouseDown;
        }

        function dragMouseDown(e) {
            e = e || window.event;
            e.preventDefault();
            // get the mouse cursor position at startup:
            pos3 = e.clientX;
            pos4 = e.clientY;
            document.onmouseup = closeDragElement;
            // call a function whenever the cursor moves:
            document.onmousemove = elementDrag;
        }

        function elementDrag(e) {
            e = e || window.event;
            e.preventDefault();
            // calculate the new cursor position:
            pos1 = pos3 - e.clientX;
            pos2 = pos4 - e.clientY;
            pos3 = e.clientX;
            pos4 = e.clientY;
            // set the element's new position:
            elmnt.style.top = (elmnt.offsetTop - pos2) + "px";
            elmnt.style.left = (elmnt.offsetLeft - pos1) + "px";
        }

</script>