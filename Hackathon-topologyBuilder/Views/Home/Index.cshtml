<style>
    #contents {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
    }

    #canvas {
        width: 1400px;
        height: 650px;
        padding: 5px;
        border: 2px inset #aaaaaa;
    }

    #stage {
        width: 750px;
        height: 100px;
        padding: 5px;
        border: 0px solid #aaaaaa;
    }

    #StageTable {
        border: 1px solid #aaaaaa;
    }

    #inputform {
        padding-left: 10%;
    }

    .canvasblock {
        width: 750px;
        height: 300px;
        z-index: 15;
        background-color: #ffffff;
        text-align: center;
        border: 1px solid #d3d3d3;
    }

    /* Modal Content/Box */
    .modal-content {
        background-color: #fefefe;
        margin: 15% auto; /* 15% from the top and centered */
        padding: 20px;
        border: 1px solid #888;
        width: 80%; /* Could be more or less, depending on screen size */
    }

</style>

<script src="https://cdn.jsdelivr.net/npm/leader-line@1.0.5/leader-line.min.js"></script>

<body>

    <div id="stage">
        <!--ondrop="remove(event)" ondragover="allowDrop(event)"> -->
        <table id="StageTable">
            <tr>
                <td>Virtual WAN</td>
                <td>Virtual Hub</td>
                <td>VNG</td>
                <td>Connection</td>
                <td>Site</td>
                <td rowspan="2">
                    <div id="inputform">
                        <form id="formid" action="" onsubmit="submitForm()">
                            <label for="sid">Subscription id:</label>
                            <input type="text" id="sid" name="sid"><br><br>
                            <label for="rg">Resource group:</label>
                            <input type="text" id="rg" name="rg"><br><br>
                        </form>
                    </div>
                </td>
                <td rowspan="2">
                    <button type="button" class="btn btn-primary btn-md" onclick="TSButton()">
                        Deploy Topology
                    </button>
                </td>
            </tr>
            <tr>
                <td>
                    <div id="wanholder">
                        <img id="wan" src="./assets/wan.png" draggable="true" ondragstart="drag(event)" width="50" height="50">
                    </div>
                </td>
                <td>
                    <img id="hub" src="./assets/hub.png" draggable="true" ondragstart="drag(event)" width="50" height="50">
                </td>
                <td>
                    <img id="vng" src="./assets/vng.png" draggable="true" ondragstart="drag(event)" width="50" height="50">
                </td>
                <td>
                    <img id="conn" src="./assets/conn.png" draggable="true" ondragstart="drag(event)" width="50" height="50">
                </td>
                <td>
                    <img id="site" src="./assets/site.png" draggable="true" ondragstart="drag(event)" width="50" height="50">
                </td>
            </tr>
        </table>

    </div>

    <div id="canvas" ondrop="drop(event)" ondragover="allowDrop(event)"></div>

</body>



<script>

    //var line = new LeaderLine(document.getElementById('wan'), document.getElementById('hub'));
    function inputResourceName(data) {
        let resourceName = prompt("Please enter Resource Name:");
        if (resourceName != null) {
            ResourceNameMap.set(document.getElementById(data).id, resourceName);
        }
    }

    function allowDrop(ev) {
        ev.preventDefault();
    }

    function drag(ev) {
        console.log("Drag target:" + ev.target.id);
        ev.dataTransfer.setData("text", ev.target.id);
    }

    function drop(event) {
        event.preventDefault();
        var data = event.dataTransfer.getData("text");
        console.log("Drag target:" + event.target.nodeName);
        if (event.target.nodeName !== "IMG") {
            //event.srcElement.appendChild(document.getElementById(data)); //didnt work
            let div = document.createElement('div');
            div.draggable = "true";
            div.id = "wandiv1";
            div.className = "canvasblock";
            div.innerHTML = '<p>VirtualWan</p><img id="wan1" src="./assets/wan.png"" width="50" height="50">';
            event.target.appendChild(div);
            //event.target.appendChild(document.getElementById(data));
            document.getElementById("wanholder").innerHTML = '<img id="wan1" src="./assets/wan.png" draggable="true" ondragstart="drag(event)" width="50" height="50">';
            document.getElementById("demo").innerHTML = document.getElementById(data).id + " was added to the topology.";

            /*
            var line = new LeaderLine(
                document.getElementById('wan'),
                document.getElementById(data));
                */
        }
    }

    function remove(event) {
        event.preventDefault();
        var data = event.dataTransfer.getData("text");
        if (event.target.nodeName !== "IMG") {
            event.target.appendChild(document.getElementById(data));

            document.getElementById("demo").innerHTML = document.getElementById(data).id + " was removed from the topology.";

            line.remove();
        }
    }


    dragElement(document.getElementById("wandiv1"));

    function dragElement(elmnt) {
        var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;
        if (document.getElementById(elmnt.id + "header")) {
            /* if present, the header is where you move the DIV from:*/
            document.getElementById(elmnt.id + "header").onmousedown = dragMouseDown;
        } else {
            /* otherwise, move the DIV from anywhere inside the DIV:*/
            elmnt.onmousedown = dragMouseDown;
        }

        function dragMouseDown(e) {
            e = e || window.event;
            e.preventDefault();
            // get the mouse cursor position at startup:
            pos3 = e.clientX;
            pos4 = e.clientY;
            document.onmouseup = closeDragElement;
            // call a function whenever the cursor moves:
            document.onmousemove = elementDrag;
        }

        function elementDrag(e) {
            e = e || window.event;
            e.preventDefault();
            // calculate the new cursor position:
            pos1 = pos3 - e.clientX;
            pos2 = pos4 - e.clientY;
            pos3 = e.clientX;
            pos4 = e.clientY;
            // set the element's new position:
            elmnt.style.top = (elmnt.offsetTop - pos2) + "px";
            elmnt.style.left = (elmnt.offsetLeft - pos1) + "px";
        }

        function closeDragElement() {
            /* stop moving when mouse button is released:*/
            document.onmouseup = null;
            document.onmousemove = null;
        }
    }
</script>